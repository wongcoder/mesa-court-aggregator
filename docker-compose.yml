version: "3.8"

services:
  mesa-court-aggregator:
    build: .
    container_name: mesa-court-aggregator
    ports:
      - "3000:3000"
    volumes:
      # Persist data directory for cache files
      - ./data:/app/data
      # Optional: Mount logs directory
      - ./logs:/app/logs
    # Load environment variables from .env file
    # Copy sample.env to .env and configure your settings
    env_file:
      - .env
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "const http = require('http'); const options = { hostname: 'localhost', port: 3000, path: '/health', timeout: 5000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) { process.exit(0); } else { process.exit(1); } }); req.on('error', () => process.exit(1)); req.on('timeout', () => process.exit(1)); req.end();",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    # Resource limits removed due to kernel compatibility
    # If your system supports cgroups v2, you can uncomment:
    # deploy:
    #   resources:
    #     limits:
    #       memory: 2G
    #       cpus: "2.0"
